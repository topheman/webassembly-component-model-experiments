#!/bin/bash

# Script to prepare WIT files by copying and making modifications
# Usage: ./scripts/prepare-wit-files.sh -i <input_dir> -o <output_dir> -s <search_string>

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Default values
INPUT_DIR=""
OUTPUT_DIR=""
SEARCH_STRING=""
SCRIPT_NAME=$(basename "$0")

# Function to show usage
show_usage() {
    echo -e "${BLUE}Usage:${NC}"
    echo -e "  $SCRIPT_NAME -i <input_dir> -o <output_dir> -s <search_string>"
    echo ""
    echo -e "${BLUE}Options:${NC}"
    echo -e "  -i    Input directory containing .wit files"
    echo -e "  -o    Output directory for processed .wit files"
    echo -e "  -s    Search string to uncomment (e.g., 'SPECIFIC TinyGo')"
    echo ""
    echo -e "${BLUE}Examples:${NC}"
    echo -e "  $SCRIPT_NAME -i ./crates/pluginlab/wit -o ./go_modules/wit -s 'SPECIFIC TinyGo'"
    echo -e "  $SCRIPT_NAME -i ./src/wit -o ./dist/wit -s 'SPECIFIC Rust'"
    echo ""
    echo -e "${BLUE}Description:${NC}"
    echo -e "  Copies .wit files from input directory to output directory and:"
    echo -e "  1. Adds a header comment indicating the file is generated"
    echo -e "  2. Uncomments lines containing the specified search string"
}

# Parse command line arguments
while getopts "i:o:s:h" opt; do
    case $opt in
        i) INPUT_DIR="$OPTARG" ;;
        o) OUTPUT_DIR="$OPTARG" ;;
        s) SEARCH_STRING="$OPTARG" ;;
        h) show_usage; exit 0 ;;
        \?) echo -e "${RED}Invalid option: -$OPTARG${NC}" >&2; show_usage; exit 1 ;;
        :) echo -e "${RED}Option -$OPTARG requires an argument.${NC}" >&2; show_usage; exit 1 ;;
    esac
done

# Check if required arguments are provided
if [ -z "$INPUT_DIR" ] || [ -z "$OUTPUT_DIR" ] || [ -z "$SEARCH_STRING" ]; then
    echo -e "${RED}Error: Missing required arguments${NC}"
    show_usage
    exit 1
fi

# Check if input directory exists
if [ ! -d "$INPUT_DIR" ]; then
    echo -e "${RED}Error: Input directory '$INPUT_DIR' does not exist${NC}"
    exit 1
fi

# Create output directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

echo -e "${GREEN}Preparing WIT files...${NC}"
echo -e "${BLUE}Input:${NC} $INPUT_DIR"
echo -e "${BLUE}Output:${NC} $OUTPUT_DIR"
echo -e "${BLUE}Search:${NC} $SEARCH_STRING"
echo ""

# Copy all .wit files from input to output
echo -e "${YELLOW}Copying WIT files...${NC}"
cp "$INPUT_DIR"/*.wit "$OUTPUT_DIR/"

# Process each .wit file
for wit_file in "$OUTPUT_DIR"/*.wit; do
    if [ -f "$wit_file" ]; then
        filename=$(basename "$wit_file")
        echo -e "${YELLOW}Processing $filename...${NC}"
        
        # Create a temporary file
        temp_file=$(mktemp)
        
        # Add the header comment
        echo "// Code generated by \`$SCRIPT_NAME\`, from \`$INPUT_DIR/*.wit\`. DO NOT EDIT!" > "$temp_file"
        echo "" >> "$temp_file"
        
        # Add the rest of the file content, uncommenting lines with search string
        sed "s|^\\([[:space:]]*\\)//[[:space:]]*\\(.*$SEARCH_STRING.*\\)|\\1\\2|" "$wit_file" >> "$temp_file"
        
        # Replace the original file with the modified content
        mv "$temp_file" "$wit_file"
        
        echo -e "${GREEN}✓ Processed $filename${NC}"
    fi
done

echo ""
echo -e "${GREEN}✓ All WIT files prepared successfully!${NC}"
echo -e "${YELLOW}Files copied to: $OUTPUT_DIR${NC}"
